version: '3.8'

services:
  api-gateway:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    image: api-gateway:latest
    container_name: api-gateway
    env_file:
      - .env.prod
    ports:
      - "3000:3000"
    restart: always
    networks:
      - microservices-network
    deploy:
      mode: replicated
      replicas: 3
      update_config:
        parallelism: 1
        delay: 10s
        order: start-first
        failure_action: rollback
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 5
        window: 120s
      resources:
        limits:
          cpus: '1'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health/liveness"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s

  # In production, the following services would be defined in their own repositories
  # and would have their own docker-compose files or be managed by orchestrators like Kubernetes

  nginx-proxy:
    image: nginx:alpine
    container_name: nginx-proxy
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/certs:/etc/nginx/certs
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api-gateway
    networks:
      - microservices-network
    restart: always
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

networks:
  microservices-network:
    driver: bridge

volumes:
  api-gateway-logs:
    driver: local
